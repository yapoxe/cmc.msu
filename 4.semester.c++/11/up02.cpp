/*
Язык L1 = { 1n0m1m0n | m, n > 0 }. 
Напишите функции, которые с помощью рекурсивного спуска проверяют принадлежность строки языку L1. 
В процессе рекурсивного спуска входная строка должна преобразовываться в строку 1m0n+m. 
Для преобразования допускается только вывод одного символа в стандартный поток вывода. 
Использование вспомогательных переменных не допускается.
На стандартном потоке подаются строки, принадлежащие языку L1, разделяющиеся пробельными символами. 
Для каждой входной строки на стандартный поток вывода напечатайте соответствующую строку языка L2. 
Каждая строка должна выводиться на отдельной строке текста.
В качестве комментария в начале сдаваемой программы приведите грамматику языка, пригодную к рекурсивному спуску.
Автор: Владимир (vk.com/yapoxe) 
*/
#include <iostream>

inline bool get(int &a) {
    a = std::cin.get();
    if(a == EOF) {
        return false;
    }
    if(isspace(a)) {
        return get(a);
    }
    return true;
}

void D(int &a) {
    if(a == '1') {
        get(a);
        D(a);
        std::cout << '0';
    }
}

void C(int &a) {
    if(a == '0') {
        get(a);
        C(a);
        std::cout << '1';
    }
}

void B(int &a) {
    if(a == '1') {
        get(a);
        B(a);
        std::cout << '0';
    } else if(a == '0') {
        get(a);
        C(a);
        std::cout << '1';
        D(a);
    }
}

void A(int &a) {
    if(a == '0') {
        get(a);
        A(a);
    }
}

void F(int &a) {
    A(a);
    B(a);
}

int main() {
    int a;
    while(get(a)) {
        F(a);
        std::cout << std::endl;
    }
    return 0;
}